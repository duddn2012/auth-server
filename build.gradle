plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.postgresql:postgresql:42.7.3'
	implementation 'org.projectlombok:lombok:1.18.26'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	
	// 테스트 병렬 실행 설정
	maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
	
	// 테스트 타임아웃 설정
	timeout = Duration.ofMinutes(5)
	
	// 테스트 로그 설정
	testLogging {
		events "passed", "skipped", "failed"
		showExceptions true
		showCauses true
		showStackTraces true
	}
	
	// 테스트 실행 시 메모리 설정
	minHeapSize = "128m"
	maxHeapSize = "512m"
	
	// 테스트 캐시 비활성화
	outputs.upToDateWhen { false }
}
